{"remainingRequest":"F:\\Projects\\smit\\client\\node_modules\\thread-loader\\dist\\cjs.js!F:\\Projects\\smit\\client\\node_modules\\babel-loader\\lib\\index.js!F:\\Projects\\smit\\client\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\Projects\\smit\\client\\src\\store.js","dependencies":[{"path":"F:\\Projects\\smit\\client\\src\\store.js","mtime":1562411020737},{"path":"F:\\Projects\\smit\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\smit\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\smit\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Projects\\smit\\client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    user: {}\n  },\n  mutations: {\n    authRequest: function authRequest(state) {\n      Vue.set(state, 'status', 'loading');\n    },\n    authSuccess: function authSuccess(state, payload) {\n      Vue.set(state, 'status', 'success');\n      state.token = payload.token;\n      state.user = payload.user;\n    },\n    authError: function authError(state) {\n      Vue.set(state, 'status', 'error');\n    },\n    logout: function logout(state) {\n      Vue.set(state, 'status', '');\n      state.token = '';\n      state.user = {};\n    },\n    setUser: function setUser(state, payload) {\n      state.user = payload;\n    }\n  },\n  actions: {\n    login: function login(_ref, user) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve, reject) {\n        commit('authRequest');\n        Vue.prototype.axios({\n          url: Vue.prototype.$apiBaseUrl + '/api/auth/signin',\n          data: user,\n          method: 'POST'\n        }).then(function (resp) {\n          var token = resp.data.accessToken;\n          var user = resp.data.userInfo;\n          localStorage.setItem('token', token);\n          commit('authSuccess', {\n            token: token,\n            user: user\n          });\n          resolve(resp);\n        }).catch(function (err) {\n          commit('authError');\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n    register: function register(_ref2, user) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        commit('authRequest');\n        Vue.prototype.axios({\n          url: Vue.prototype.$apiBaseUrl + '/api/auth/signup',\n          data: user,\n          method: 'POST'\n        }).then(function (resp) {\n          commit('authSuccess', {\n            token: undefined,\n            user: undefined\n          });\n          resolve(resp);\n        }).catch(function (err) {\n          commit('authError', err);\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n    logout: function logout(_ref3) {\n      var commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        commit('logout');\n        localStorage.removeItem('token');\n        resolve();\n      });\n    },\n    userInfo: function userInfo(_ref4) {\n      var getters = _ref4.getters,\n          commit = _ref4.commit;\n\n      if (getters.isAuthenticated) {\n        return new Promise(function (resolve, reject) {\n          Vue.prototype.axios.get(Vue.prototype.$apiBaseUrl + '/api/user/me', {\n            headers: {\n              'Authorization': getters.bearerToken\n            }\n          }).then(function (resp) {\n            commit('setUser', resp.data);\n            resolve(resp);\n          }).catch(function (err) {\n            reject(err);\n          });\n        });\n      }\n    }\n  },\n  getters: {\n    bearerToken: function bearerToken(state) {\n      return \"Bearer \".concat(state.token);\n    },\n    isAuthenticated: function isAuthenticated(state) {\n      return !!state.token;\n    },\n    authStatus: function authStatus(state) {\n      return state.status;\n    },\n    userId: function userId(state) {\n      return state.user.id;\n    },\n    username: function username(state) {\n      return state.user.username;\n    }\n  }\n});",{"version":3,"sources":["F:\\Projects\\smit\\client\\src\\store.js"],"names":["Vue","Vuex","use","Store","state","status","token","localStorage","getItem","user","mutations","authRequest","set","authSuccess","payload","authError","logout","setUser","actions","login","commit","Promise","resolve","reject","prototype","axios","url","$apiBaseUrl","data","method","then","resp","accessToken","userInfo","setItem","catch","err","removeItem","register","undefined","getters","isAuthenticated","get","headers","bearerToken","authStatus","userId","id","username"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    user: {}\n  },\n  mutations: {\n    authRequest(state) {\n      Vue.set(state, 'status', 'loading')    \n    },\n    authSuccess(state, payload) {\n      Vue.set(state, 'status', 'success') \n      state.token = payload.token\n      state.user = payload.user\n    },\n    authError(state) {\n      Vue.set(state, 'status', 'error')\n    },\n    logout(state) {\n      Vue.set(state, 'status', '')\n      state.token = ''\n      state.user = {}\n    },\n    setUser(state, payload) {\n      state.user = payload\n    }\n  },\n  actions: {\n    login({commit}, user) {\n      return new Promise((resolve, reject) => {\n        commit('authRequest')\n        Vue.prototype.axios({url: Vue.prototype.$apiBaseUrl + '/api/auth/signin', data: user, method: 'POST' })\n        .then(resp => {\n          const token = resp.data.accessToken\n          const user = resp.data.userInfo\n          localStorage.setItem('token', token)\n          commit('authSuccess', { token, user })\n          resolve(resp)\n        })\n        .catch(err => {\n          commit('authError')\n          localStorage.removeItem('token')\n          reject(err)\n        })\n      })\n    },\n    register({commit}, user) {\n      return new Promise((resolve, reject) => {\n        commit('authRequest')\n        Vue.prototype.axios({url: Vue.prototype.$apiBaseUrl + '/api/auth/signup', data: user, method: 'POST' })\n        .then(resp => {\n          commit('authSuccess', { token: undefined, user: undefined })\n          resolve(resp)\n          \n        })\n        .catch(err => {\n          commit('authError', err)\n          localStorage.removeItem('token')\n          reject(err)\n        })\n      })\n    },\n    logout({commit}) {\n      return new Promise((resolve, reject) => {\n        commit('logout')\n        localStorage.removeItem('token')\n        resolve()\n      })\n    },\n    userInfo({getters, commit}) {\n      if (getters.isAuthenticated) {\n        return new Promise((resolve, reject) => {\n          Vue.prototype.axios.get(Vue.prototype.$apiBaseUrl + '/api/user/me', { headers: {'Authorization': getters.bearerToken}})\n          .then(resp => {\n            commit('setUser', resp.data)\n            resolve(resp)\n          })\n          .catch(err => {\n            reject(err)\n          })\n        })\n      } \n    }\n  },\n  getters: {\n    bearerToken: state => `Bearer ${state.token}`,\n    isAuthenticated: state => !!state.token,\n    authStatus: state => state.status,\n    userId: state => state.user.id,\n    username: state => state.user.username\n  }\n})\n"]}]}