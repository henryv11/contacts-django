{"remainingRequest":"F:\\Projects\\smit-django\\client\\node_modules\\babel-loader\\lib\\index.js!F:\\Projects\\smit-django\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\Projects\\smit-django\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Projects\\smit-django\\client\\src\\components\\SignupForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\Projects\\smit-django\\client\\src\\components\\SignupForm.vue","mtime":1563722422516},{"path":"F:\\Projects\\smit-django\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\smit-django\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Projects\\smit-django\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\smit-django\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"LoginForm\",\n  data: function data() {\n    return {\n      form: {\n        username: \"\",\n        password: \"\",\n        passwordConfirm: \"\"\n      },\n      validation: {\n        usernameOk: null,\n        usernameError: \"\",\n        passwordOk: null,\n        passwordError: \"\",\n        passwordConfirmOk: null,\n        passwordConfirmError: \"\"\n      },\n      registrationSuccess: false,\n      show: true\n    };\n  },\n  methods: {\n    onSubmit: function onSubmit(evt) {\n      var _this = this;\n\n      evt.preventDefault();\n      this.formValidation();\n\n      if (this.formOk) {\n        this.$store.dispatch(\"register\", this.form).then(function () {\n          _this.registrationSuccess = true;\n\n          _this.$emit(\"registrationSuccess\");\n        }).catch(function (err) {\n          _this.registrationSuccess = false;\n        });\n      }\n    },\n    onReset: function onReset(evt) {\n      var _this2 = this;\n\n      evt.preventDefault();\n      this.form.username = \"\";\n      this.form.password = \"\";\n      this.form.passwordConfirm = \"\";\n      this.show = false;\n      this.$nextTick(function () {\n        _this2.show = true;\n      });\n    },\n    formValidation: function formValidation() {\n      var _this3 = this;\n\n      if (this.form.username.length == 0) {\n        this.validation.usernameError = \"\";\n        this.validation.usernameOk = null;\n      } else if (this.form.username.length < 3 || this.form.username.length > 15) {\n        this.validation.usernameError = \"Kasutajanime pikkus peab olema 3-15 tähemärki\";\n        this.validation.usernameOk = false;\n      } else {\n        this.$http({\n          url: this.$apiBaseUrl + \"/api/username/availability/\",\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          data: {\n            username: this.form.username\n          }\n        }).then(function (resp) {\n          if (!resp.data.message) {\n            _this3.validation.usernameError = \"\";\n            _this3.validation.usernameOk = true;\n          } else {\n            _this3.validation.usernameError = \"Kasutajanimi on juba võetud\";\n            _this3.validation.usernameOk = false;\n          }\n        });\n      }\n\n      if (this.form.password.length == 0) {\n        this.validation.passwordError = \"\";\n        this.validation.passwordOk = null;\n      } else if (this.form.password.length < 8 || this.form.password.length > 20) {\n        this.validation.passwordError = \"Parooli pikkus peab olema 8-20 tähemärki\";\n        this.validation.passwordOk = false;\n      } else {\n        this.validation.passwordError = \"\";\n        this.validation.passwordOk = true;\n      }\n\n      if (this.form.passwordConfirm.length == 0) {\n        this.validation.passwordConfirmError = \"\";\n        this.validation.passwordConfirmOk = null;\n      } else if (this.form.passwordConfirm != this.form.password) {\n        this.validation.passwordConfirmError = \"Parooli kinnitus ei ühti parooliga\";\n        this.validation.passwordConfirmOk = false;\n      } else if (this.form.passwordConfirm == this.form.password) {\n        this.validation.passwordConfirmError = \"\";\n        this.validation.passwordConfirmOk = true;\n      }\n    },\n    registrationContinue: function registrationContinue() {\n      this.$emit(\"registrationSuccessContinue\");\n      this.registrationSuccess = false;\n    }\n  },\n  computed: {\n    authStatus: function authStatus() {\n      return this.$store.getters.authStatus;\n    },\n    formOk: function formOk() {\n      return this.validation.usernameOk && this.validation.passwordOk && this.validation.passwordConfirmOk;\n    }\n  }\n};",{"version":3,"sources":["SignupForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"registrationSuccess\">\r\n      <p class=\"lead\">Registreerimine õnnestus</p>\r\n      <p class=\"small mt-4 p-0 text-muted\">\r\n        Võite nüüd\r\n        <b-link href=\"#\" @click=\"registrationContinue\">sisse logida</b-link>\r\n      </p>\r\n    </div>\r\n    <b-form @submit=\"onSubmit\" @reset=\"onReset\" v-else-if=\"show\">\r\n      <b-form-group\r\n        id=\"input-group-username\"\r\n        label=\"Kasutajanimi:\"\r\n        label-for=\"input-username\"\r\n        label-size=\"sm\"\r\n        label-align=\"left\"\r\n        label-class=\"p-0 m-0\"\r\n      >\r\n        <b-form-input\r\n          @change=\"formValidation\"\r\n          id=\"input-username\"\r\n          v-model=\"form.username\"\r\n          type=\"text\"\r\n          :state=\"validation.usernameOk\"\r\n          required\r\n        ></b-form-input>\r\n        <b-form-invalid-feedback :state=\"validation.usernameOk\">{{validation.usernameError}}</b-form-invalid-feedback>\r\n        <b-form-valid-feedback :state=\"validation.usernameOk\">Kasutajanimi sobib</b-form-valid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group\r\n        id=\"input-group-password\"\r\n        label=\"Parool:\"\r\n        label-for=\"input-password\"\r\n        label-size=\"sm\"\r\n        label-align=\"left\"\r\n        label-class=\"p-0 m-0\"\r\n      >\r\n        <b-form-input\r\n          @change=\"formValidation\"\r\n          id=\"input-password\"\r\n          v-model=\"form.password\"\r\n          type=\"password\"\r\n          :state=\"validation.passwordOk\"\r\n          required\r\n        ></b-form-input>\r\n        <b-form-invalid-feedback :state=\"validation.passwordOk\">{{validation.passwordError}}</b-form-invalid-feedback>\r\n        <b-form-valid-feedback :state=\"validation.passwordOk\">Parool sobib</b-form-valid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group\r\n        id=\"input-group-password-confirm\"\r\n        label=\"Kinnita parool:\"\r\n        label-for=\"input-password-confirm\"\r\n        label-size=\"sm\"\r\n        label-align=\"left\"\r\n        label-class=\"p-0 m-0\"\r\n      >\r\n        <b-form-input\r\n          @change=\"formValidation\"\r\n          id=\"input-password-confirm\"\r\n          v-model=\"form.passwordConfirm\"\r\n          type=\"password\"\r\n          :state=\"validation.passwordConfirmOk\"\r\n          required\r\n        ></b-form-input>\r\n        <b-form-invalid-feedback\r\n          :state=\"validation.passwordConfirmOk\"\r\n        >{{validation.passwordConfirmError}}</b-form-invalid-feedback>\r\n        <!--<b-form-valid-feedback :state=\"validation.passwordConfirmOk\">Looks Good.</b-form-valid-feedback>!-->\r\n      </b-form-group>\r\n\r\n      <b-button type=\"submit\" :disabled=\"!formOk\" size=\"sm\" variant=\"primary\">\r\n        <b-spinner v-if=\"authStatus == 'loading'\" small></b-spinner>\r\n        <span v-else>Registreeri</span>\r\n      </b-button>\r\n    </b-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"LoginForm\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\"\r\n      },\r\n      validation: {\r\n        usernameOk: null,\r\n        usernameError: \"\",\r\n        passwordOk: null,\r\n        passwordError: \"\",\r\n        passwordConfirmOk: null,\r\n        passwordConfirmError: \"\"\r\n      },\r\n      registrationSuccess: false,\r\n      show: true\r\n    };\r\n  },\r\n  methods: {\r\n    onSubmit(evt) {\r\n      evt.preventDefault();\r\n      this.formValidation();\r\n      if (this.formOk) {\r\n        this.$store\r\n          .dispatch(\"register\", this.form)\r\n          .then(() => {\r\n            this.registrationSuccess = true;\r\n            this.$emit(\"registrationSuccess\");\r\n          })\r\n          .catch(err => {\r\n            this.registrationSuccess = false;\r\n          });\r\n      }\r\n    },\r\n    onReset(evt) {\r\n      evt.preventDefault();\r\n      this.form.username = \"\";\r\n      this.form.password = \"\";\r\n      this.form.passwordConfirm = \"\";\r\n      this.show = false;\r\n      this.$nextTick(() => {\r\n        this.show = true;\r\n      });\r\n    },\r\n    formValidation() {\r\n      if (this.form.username.length == 0) {\r\n        this.validation.usernameError = \"\";\r\n        this.validation.usernameOk = null;\r\n      } else if (\r\n        this.form.username.length < 3 ||\r\n        this.form.username.length > 15\r\n      ) {\r\n        this.validation.usernameError =\r\n          \"Kasutajanime pikkus peab olema 3-15 tähemärki\";\r\n        this.validation.usernameOk = false;\r\n      } else {\r\n        this.$http({\r\n          url: this.$apiBaseUrl + \"/api/username/availability/\",\r\n          method: \"post\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          data: { username: this.form.username }\r\n        }).then(resp => {\r\n          if (!resp.data.message) {\r\n            this.validation.usernameError = \"\";\r\n            this.validation.usernameOk = true;\r\n          } else {\r\n            this.validation.usernameError = \"Kasutajanimi on juba võetud\";\r\n            this.validation.usernameOk = false;\r\n          }\r\n        });\r\n      }\r\n\r\n      if (this.form.password.length == 0) {\r\n        this.validation.passwordError = \"\";\r\n        this.validation.passwordOk = null;\r\n      } else if (\r\n        this.form.password.length < 8 ||\r\n        this.form.password.length > 20\r\n      ) {\r\n        this.validation.passwordError =\r\n          \"Parooli pikkus peab olema 8-20 tähemärki\";\r\n        this.validation.passwordOk = false;\r\n      } else {\r\n        this.validation.passwordError = \"\";\r\n        this.validation.passwordOk = true;\r\n      }\r\n\r\n      if (this.form.passwordConfirm.length == 0) {\r\n        this.validation.passwordConfirmError = \"\";\r\n        this.validation.passwordConfirmOk = null;\r\n      } else if (this.form.passwordConfirm != this.form.password) {\r\n        this.validation.passwordConfirmError =\r\n          \"Parooli kinnitus ei ühti parooliga\";\r\n        this.validation.passwordConfirmOk = false;\r\n      } else if (this.form.passwordConfirm == this.form.password) {\r\n        this.validation.passwordConfirmError = \"\";\r\n        this.validation.passwordConfirmOk = true;\r\n      }\r\n    },\r\n    registrationContinue() {\r\n      this.$emit(\"registrationSuccessContinue\");\r\n      this.registrationSuccess = false;\r\n    }\r\n  },\r\n  computed: {\r\n    authStatus() {\r\n      return this.$store.getters.authStatus;\r\n    },\r\n    formOk() {\r\n      return (\r\n        this.validation.usernameOk &&\r\n        this.validation.passwordOk &&\r\n        this.validation.passwordConfirmOk\r\n      );\r\n    }\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src/components"}]}